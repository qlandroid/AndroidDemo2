    View的绘图机制存在如下缺陷：
        1.View缺乏双缓冲机制
        2.当程序需要更新View上的图片时,程序必须重绘View上显示的整张图片
        3.新县城无法直接更新View组件。

    SurfaceView的绘图机制
    SurfaceView 一般会与SurfaceHolder结合使用，SurfaceHolder用于向与之关联的SurfaceView上绘制，调用SurfaceView的getHolder()方法即可获取SurfaceView关联的SurfaceHolder.

        SurfaceHolder提供了如下方法获取Canvas对象
            Canvas lockCanvas():锁定整个SurfaceView对象，获取该SurfaceView上的Canvas.
            Canvas lockCanvas(Rect dirty):锁定SurfaceView上Rect划分的区域，获取该SurfaceView上的Canvas.
                获取制定区域的Canvas时，SurfaceView将只对Rect所圈出来的区域进行更新，通过这种凡事可以提高画面的更新速度。
            #以上返回的是相同的Canvas

            unlockCanvasAndPost(canvas) 释放绘图，提交所绘制的徒刑。

            ##需要指出的是，当调用SurfaceHolder的unlockCanvasANdPost()方法之后，该方法之前所绘制的图形还处于缓冲区中，下次lockCanvas()方法锁定的区域可能会遮挡它。


    SurfaceHolder.Callback实例中的三个方法：
    void surfaceChanged(SurfaceHolder holder,int format,int width,int height)：当一个SurfaceView的格式或大小发生改变时回调该方法；
    void surfaceCreated(SurfaceHolder holder):当SurfaceView 被创建时回调该方法。
    void surfaceDestroyed(SurfaceHolder holder):当SurfaceView将要被销毁时调用该方法